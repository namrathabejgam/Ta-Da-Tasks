{"version":3,"sources":["redux/actions.js","components/AddTaskForm.js","redux/actionTypes.js","constants.js","components/VisibilityFilters.js","components/Todo.js","redux/selectors.js","components/TodoList.js","App.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["nextTodoId","connect","addTodo","content","type","payload","id","editTodo","withStyles","paper","position","minHeight","outline","backgroundColor","borderRadius","top","margin","width","props","prefill","includes","mode","useState","data","summary","setSummary","description","setDescription","priority","setPriority","moment","dueDate","Date","setDueDate","handleChange","fieldValue","field","target","value","getInputFields","fieldName","input","inputFieldList","label","key","readOnly","options","createdOn","format","currentState","completed","Grid","item","xs","FormControl","style","InputLabel","shrink","Select","onChange","disabled","MenuItem","utils","MomentUtils","DatePicker","minDate","animateYearScrolling","TextField","required","event","rows","toLowerCase","multiline","startAdornment","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","marginTop","marginLeft","Paper","elevation","container","justify","paddingTop","Typography","variant","toUpperCase","paddingLeft","alignItems","paddingBottom","Button","color","component","onClick","marginRight","length","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","state","activeFilter","visibilityFilter","setFilter","filter","React","setValue","className","Tabs","newValue","textContent","indicatorColor","Object","keys","map","filterKey","currentFilter","Tab","cx","toggleTodo","deleteTodo","todo","openTaskModalForm","hovered","setHovered","openDeleteConfirmation","setOpenDeleteConfirmation","toggleHover","set","handleDeleteClose","TableRow","onMouseEnter","onMouseLeave","cursor","boxShadow","TableCell","scope","align","IconButton","aria-label","e","stopPropagation","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","getTodosState","store","todos","getTodos","allIds","getTodoList","byIds","getTodoById","allTodos","getTodosByVisibilityFilter","TableContainer","Table","TableHead","TableBody","index","App","openTaskModal","setOpenTaskModal","setMode","setData","height","fontSize","initialState","action","combineReducers","k","i","indexOf","splice","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa6768db.chunk.js","sourcesContent":["import { ADD_TODO, TOGGLE_TODO, EDIT_TODO, DELETE_TODO, SET_FILTER } from \"./actionTypes\";\r\n\r\nlet nextTodoId = 0;\r\n\r\nexport const addTodo = content => ({\r\n  type: ADD_TODO,\r\n  payload: {\r\n    id: ++nextTodoId,\r\n    content\r\n  }\r\n});\r\n\r\nexport const editTodo = (content,id) => ({\r\n  type: EDIT_TODO,\r\n  payload: {\r\n    id,\r\n    content\r\n  }\r\n});\r\n\r\nexport const deleteTodo = id => ({\r\n  type: DELETE_TODO,\r\n  payload: { id }\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n    type: TOGGLE_TODO,\r\n    payload: { id }\r\n});\r\n\r\nexport const setFilter = filter => ({ type: SET_FILTER, payload: { filter } });","import React, { useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo, editTodo } from \"../redux/actions\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from 'moment';\r\nimport MomentUtils from '@date-io/moment';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = () => {\r\n    return {\r\n        paper: {\r\n            position: \"relative\",\r\n            minHeight: \"231px\",\r\n            outline: \"none\",\r\n            backgroundColor: \"white\",\r\n            borderRadius: 0,\r\n            top: \"98.46px\",\r\n            margin: \"0 auto\",\r\n            width: \"50%\"\r\n          }  \r\n    };\r\n  };\r\n\r\nconst AddTaskForm = props => {\r\n\r\n    const prefillModes = ['edit','view']\r\n    const prefill = prefillModes.includes(props.mode) ? true : false\r\n    const [summary, setSummary] = useState( prefill  ? props.data.content.summary : '');\r\n    const [description, setDescription] = useState( prefill ? props.data.content.description : '');\r\n    const [priority, setPriority] = useState( prefill ? props.data.content.priority : '');\r\n    const [dueDate, setDueDate] = useState( prefill ? moment(props.data.content.dueDate) :new Date());   \r\n\r\n    const handleAddTask = () => {\r\n        const data = {\r\n            \"summary\" : summary,\r\n            \"description\" : description,\r\n            \"priority\" : priority,\r\n            \"dueDate\" : dueDate,\r\n            \"createdOn\" : new Date()\r\n        }\r\n        props.mode === \"edit\" ? props.editTodo(data,props?.data.id) : props.addTodo(data);\r\n        props.handleClose() ;\r\n    };\r\n\r\n    const handleChange = ( fieldValue, field) => {\r\n        if (field === 'summary') {\r\n            setSummary(fieldValue);\r\n        }\r\n        else if(field === 'description') {\r\n            setDescription(fieldValue);\r\n        }\r\n        else if(field === 'priority') {\r\n            setPriority(fieldValue.target.value);\r\n        }           \r\n        else if(field === \"dueDate\"){\r\n            setDueDate(fieldValue);\r\n        }\r\n    }\r\n\r\n\r\n    const getInputField = (input) => {\r\n        if(input.type === \"select\"){\r\n            return (\r\n            <FormControl style={{width: '196px'}}>\r\n                <InputLabel shrink>Priority</InputLabel>\r\n                <Select\r\n                  value={input.value}\r\n                  onChange={(value) => handleChange(value, input.key)}\r\n                  disabled={props.mode===\"view\"?true:false}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"Low\"}>Low</MenuItem>\r\n                    <MenuItem value={\"Medium\"}>Medium</MenuItem>\r\n                    <MenuItem value={\"High\"}>High</MenuItem>\r\n                </Select>\r\n              </FormControl>                \r\n            )\r\n        }\r\n        if(input.type === \"date\"){\r\n            return (\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <DatePicker\r\n                        style={{width: '212px'}}\r\n                        label=\"Due Date\"\r\n                        value={dueDate}\r\n                        minDate={new Date()}\r\n                        onChange={(value) => handleChange(value, input.key)}\r\n                        animateYearScrolling\r\n                        disabled={props.mode===\"view\"?true:false}\r\n                    />\r\n                    </MuiPickersUtilsProvider>       \r\n            )\r\n        }\r\n        if (input.readOnly) {\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <TextField\r\n                    required={input.required}\r\n                    label={input.label}\r\n                    value={input.value}\r\n                    onChange={(event) => {\r\n                        handleChange(event.target.value, input.key)}\r\n                    }\r\n                    rows={input.label.toLowerCase()===\"description\"?\"4\":\"1\"}\r\n                    multiline\r\n                    style={{width:'100%'}}\r\n                    type={input.type}\r\n                    disabled={props.mode===\"view\"?true:false}\r\n                    startAdornment={input.startAdornment ? input.startAdornment : ''}\r\n                />\r\n            );\r\n        }       \r\n    }\r\n\r\n\r\n    const getInputFields = (fieldName) => {\r\n        let inputFieldList = {\r\n            summary:{\r\n                label: \"Summary\",\r\n                value: summary,\r\n                key: \"summary\",\r\n                type: \"text\",\r\n            },\r\n            description:{\r\n                label: \"Description\",\r\n                value: description,\r\n                key: \"description\",\r\n                type: \"text\",\r\n            },\r\n            priority:{\r\n                label: \"priority\",\r\n                value: priority,\r\n                key: \"priority\",\r\n                readOnly: false,\r\n                type: \"select\",\r\n                options: ['Low', 'Medium', 'High']\r\n            },\r\n            dueDate:{\r\n                label: \"Due Date\",\r\n                value: dueDate,\r\n                key: \"dueDate\",\r\n                type: \"date\"               \r\n            },\r\n            createdOn:{\r\n                label: \"Created On\",\r\n                value: moment(props?.data?.content?.createdOn).format('MMMM Do'),\r\n                key: \"createdOn\",\r\n                type: \"text\"               \r\n            },\r\n            currentState:{\r\n                label: \"Current State\",\r\n                value: props?.data?.completed===true ? \"Completed\" : \"Pending\" ,\r\n                key: \"currentState\",\r\n                type: \"text\"               \r\n            }                           \r\n        };\r\n        return <Grid item xs={11}>{getInputField(inputFieldList[fieldName])}</Grid>        \r\n    }  \r\n\r\n    return (\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={props.open}\r\n                onClose={props.handleClose}\r\n                style={{marginTop: '10%',marginLeft: '30%',width: '500px'}}\r\n            >\r\n                <Paper elevation={3}>                     \r\n                <Grid container justify={\"center\"} style={{paddingTop:'20px'}}>\r\n                    <Grid item container xs={11} justify={\"center\"}>\r\n                        <Typography variant=\"h5\">\r\n                            {props.mode.toUpperCase() + \" TASK\"}\r\n                        </Typography>\r\n                    </Grid>                                  \r\n                    <Grid item container xs={12} justify={\"space-evenly\"}>\r\n                        {getInputFields(\"summary\")}\r\n                    </Grid>\r\n                    <Grid item container xs={12} justify={\"space-evenly\"}>\r\n                        {getInputFields(\"description\")}\r\n                    </Grid>\r\n                    <Grid item container xs={12} justify={\"space-evenly\"} style={{paddingTop: '15px',paddingLeft:'11px'}}>   \r\n                        <Grid item container xs={6} justify={\"space-evenly\"}>\r\n                            {getInputFields(\"priority\")}\r\n                        </Grid>\r\n                        <Grid item container xs={6} justify={\"space-evenly\"}>\r\n                            {getInputFields(\"dueDate\")}\r\n                        </Grid> \r\n                    </Grid>\r\n                    { props.mode === \"view\" &&\r\n                    <Grid item container xs={12} justify={\"space-evenly\"} style={{paddingTop: '15px',paddingLeft:'11px'}}>   \r\n                        <Grid item container xs={6} justify={\"space-evenly\"}>\r\n                            {getInputFields(\"createdOn\")}\r\n                        </Grid>\r\n                        <Grid item container xs={6} justify={\"space-evenly\"}>\r\n                            {getInputFields(\"currentState\")}\r\n                        </Grid> \r\n                    </Grid> }                   \r\n                </Grid>\r\n               <Grid container alignItems=\"center\" justify=\"space-around\" style={{width: '100%',paddingTop: '20px',paddingBottom: '20px'}}>\r\n                   <Grid item>\r\n                   <Button variant=\"outlined\" color=\"primary\" component=\"span\" onClick={props.handleClose} style={{marginRight: '15px'}}>\r\n                        Cancel\r\n                    </Button>\r\n                    {props.mode!==\"view\" &&\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\"\r\n                            onClick={\r\n                                handleAddTask\r\n                            }\r\n                            disabled={summary.length === 0}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    }\r\n                   </Grid>\r\n                </Grid>             \r\n                </Paper>                       \r\n            </Modal>\r\n    );\r\n}\r\nexport default connect( null,\r\n    { addTodo, editTodo }\r\n)(withStyles(styles)(AddTaskForm));","export const ADD_TODO = \"ADD_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_FILTER = \"SET_FILTER\";","export const VISIBILITY_FILTERS = {\r\n    ALL: \"All Tasks\",\r\n    COMPLETED: \"Completed\",\r\n    INCOMPLETE: \"Pending\"\r\n  };","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../redux/actions\";\r\nimport { VISIBILITY_FILTERS } from \"../constants\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        setFilter(event.target.textContent);\r\n    }    \r\n  return (\r\n    <div className=\"visibility-filters\">\r\n      <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\">\r\n      {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\r\n        const currentFilter = VISIBILITY_FILTERS[filterKey];\r\n        return (\r\n        <Tab label={currentFilter} className={cx(\"filter\",currentFilter === activeFilter && \"filter--active\")} />\r\n        );\r\n      })}\r\n      </Tabs>  \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { activeFilter: state.visibilityFilter };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setFilter }\r\n)(VisibilityFilters);","import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { toggleTodo, deleteTodo } from \"../redux/actions\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst Todo = ({ todo, toggleTodo, deleteTodo, openTaskModalForm }) => {\r\n  const [hovered, setHovered] = useState('false');\r\n  const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState(false);\r\n\r\n  const toggleHover = (set) => {\r\n    setHovered(set)\r\n  }\r\n\r\n  const handleDeleteClose = () => {\r\n    setOpenDeleteConfirmation(false)\r\n  }\r\n\r\n  const rowStyle = {cursor: 'pointer', backgroundColor: '#f0f2f5',boxShadow: '5px 10px 13px rgb(255, 255, 255,0.6)' }\r\n\r\n  return(\r\n  <>\r\n  <TableRow onMouseEnter={() => toggleHover('true')} onMouseLeave={() => toggleHover('false')} onClick={() => openTaskModalForm(\"view\",todo)} style={hovered===\"true\" ?rowStyle: {}}>\r\n    <TableCell component=\"th\" scope=\"row\">\r\n      {todo.content.summary}\r\n    </TableCell>\r\n    <TableCell align=\"left\">{todo.content.priority}</TableCell>\r\n    <TableCell align=\"left\">{moment(todo.content.createdOn).format('DD-MM-YYYY')}</TableCell>\r\n    <TableCell align=\"left\">{moment(todo.content.dueDate).format('DD-MM-YYYY')}</TableCell>\r\n    <TableCell align=\"left\">\r\n      <IconButton color=\"primary\" aria-label=\"edit\" component=\"span\" onClick={(e) => {\r\n          e.stopPropagation();\r\n          openTaskModalForm(\"edit\",todo)\r\n        }}>\r\n        <EditIcon/>\r\n      </IconButton>\r\n      <IconButton color=\"primary\" aria-label=\"delete\" component=\"span\" onClick={(e) => {\r\n          e.stopPropagation();\r\n          setOpenDeleteConfirmation(true)\r\n\r\n        }}>\r\n        <DeleteIcon/>\r\n      </IconButton>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={(e) => {\r\n        e.stopPropagation();\r\n        toggleTodo(todo.id)}}>\r\n        {todo && todo.completed ? \"Reopen\" : \"Mark as Done\"}\r\n      </Button>\r\n    </TableCell>\r\n  </TableRow>\r\n  <Dialog\r\n  open={openDeleteConfirmation}\r\n  onClose={handleDeleteClose}\r\n  aria-labelledby=\"responsive-dialog-title\"\r\n  >\r\n  <DialogTitle id=\"responsive-dialog-title\">{\"DELETE TASK\"}</DialogTitle>\r\n  <DialogContent>\r\n  <DialogContentText>\r\n      You clicked on delete. Are you sure you want to delete this task?\r\n  </DialogContentText>\r\n  </DialogContent>\r\n  <DialogActions>\r\n  <Button variant=\"outlined\" color=\"primary\" onClick={handleDeleteClose}>\r\n      Cancel\r\n  </Button>\r\n  <Button onClick={() => deleteTodo(todo.id)} variant=\"contained\" color=\"primary\">\r\n      Confirm\r\n  </Button>\r\n  </DialogActions>\r\n  </Dialog>\r\n  </>\r\n);\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleTodo, deleteTodo }\r\n)(Todo);","import { VISIBILITY_FILTERS } from \"../constants\";\r\n\r\nexport const getTodosState = store => store.todos;\r\n\r\nexport const getTodoList = store =>\r\n  getTodosState(store) ? getTodosState(store).allIds : [];\r\n\r\nexport const getTodoById = (store, id) =>\r\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\r\n\r\n/**\r\n * example of a slightly more complex selector\r\n * select from store combining information from multiple reducers\r\n */\r\nexport const getTodos = store =>\r\n  getTodoList(store).map(id => getTodoById(store, id));\r\n\r\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\r\n  const allTodos = getTodos(store);\r\n  switch (visibilityFilter) {\r\n    case VISIBILITY_FILTERS.COMPLETED:\r\n      return allTodos.filter(todo => todo.completed);\r\n    case VISIBILITY_FILTERS.INCOMPLETE:\r\n      return allTodos.filter(todo => !todo.completed);\r\n    case VISIBILITY_FILTERS.ALL:\r\n    default:\r\n      return allTodos;\r\n  }\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Todo from \"./Todo\";\r\nimport { getTodosByVisibilityFilter } from \"../redux/selectors\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst TodoList = ({ todos,openTaskModalForm }) => (\r\n  <>\r\n    {todos && todos.length ?\r\n    <TableContainer component={Paper}>\r\n    <Table aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Summary</TableCell>\r\n          <TableCell align=\"left\">Priority</TableCell>\r\n          <TableCell align=\"left\">Created On</TableCell>\r\n          <TableCell align=\"left\">Due Date</TableCell>\r\n          <TableCell align=\"left\">Actions</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {todos.map((todo, index) => {\r\n          return <Todo key={`todo-${todo.id}`} todo={todo} openTaskModalForm={openTaskModalForm}/>;\r\n        })\r\n        }\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer> \r\n  : \r\n  <Grid item container xs={12} justify=\"center\">\r\n    <Grid item style={{paddingTop: '50px'}}>\r\n    Nothing in here right now!\r\n    </Grid>\r\n  </Grid>\r\n  }\r\n  </> \r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  const { visibilityFilter } = state;\r\n  const todos = getTodosByVisibilityFilter(state, visibilityFilter);\r\n  return { todos };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoList);","import React, { useState } from 'react';\nimport './App.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport AddTaskForm from './components/AddTaskForm';\nimport VisibilityFilters from './components/VisibilityFilters'\nimport TodoList from './components/TodoList'\nimport { Typography } from '@material-ui/core';\n\nfunction App() {\n  const [openTaskModal , setOpenTaskModal] = useState(false);\n  const [mode , setMode] = useState(\"\");\n  const [data, setData] = useState(\"\");\n\n  const openTaskModalForm = (mode,todo) => {\n    setOpenTaskModal(true)\n    mode && setMode(mode)\n    todo && setData(todo)\n  }\n\n  const handleClose = () => {\n    setOpenTaskModal(false);\n  }\n\n  return (\n    <Grid item container xs={12} style={{height: '100vh', width: '100%'}} justify=\"space-between\">\n      <Grid item style={{width: '100%'}}>\n        <Grid item xs={12} container alignItems=\"flex-start\" justify=\"center\" style={{backgroundColor: 'none',}}>\n          <Typography variant=\"h4\" color=\"primary\">TA-DA-TASKS!</Typography>\n        </Grid>        \n        <Grid item xs={12} container alignItems=\"flex-start\" justify=\"flex-start\" style={{backgroundColor: 'none',}}>\n          <VisibilityFilters/>\n        </Grid>\n        <Grid item xs={12}>\n          <TodoList openTaskModalForm={openTaskModalForm}/>\n        </Grid>\n      </Grid>\n      <Grid item xs container alignItems=\"flex-end\" justify=\"flex-end\" style={{backgroundColor: 'none',}}>\n        <Grid item>\n          <IconButton aria-label=\"add\" color=\"primary\">\n            <AddCircleOutlinedIcon  style={{width: '50px', height: '50px'}} onClick={() => openTaskModalForm(\"add\")} fontSize=\"large\"/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      {\n        openTaskModal && \n        <AddTaskForm\n          open={openTaskModal}\n          mode={mode}\n          data={data}\n          handleClose={handleClose}\n        />\n      }\n    </Grid>\n  );\n}\n\nexport default App;","import { SET_FILTER } from \"../actionTypes\";\r\nimport { VISIBILITY_FILTERS } from \"../../constants\";\r\n\r\nconst initialState = VISIBILITY_FILTERS.ALL;\r\n\r\nconst visibilityFilter = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FILTER: {\r\n      return action.payload.filter;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default visibilityFilter;","import { ADD_TODO, TOGGLE_TODO, EDIT_TODO, DELETE_TODO } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  allIds: [],\r\n  byIds: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      const { id, content } = action.payload;\r\n      return {\r\n        ...state,\r\n        allIds: [...state.allIds, id],\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            content,\r\n            completed: false\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    case EDIT_TODO: {\r\n      const { id, content } = action.payload;\r\n      return {\r\n        ...state,\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            ...state.byIds[id],\r\n            content,\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    case DELETE_TODO: {\r\n      const { id } = action.payload;\r\n      let k = [...state.allIds]\r\n      let byIds = state.byIds\r\n      let i = k.indexOf(id);\r\n      k.splice(i,1)\r\n      delete byIds[id]\r\n      return {\r\n        ...state,\r\n        allIds: k,\r\n        byIds\r\n      };\r\n    }\r\n\r\n    case TOGGLE_TODO: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            ...state.byIds[id],\r\n            completed: !state.byIds[id].completed\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\nimport todos from \"./todos\";\r\n\r\nexport default combineReducers({ todos, visibilityFilter });","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}